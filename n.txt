#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Define the student structure
typedef struct student
{
    int id;
    
    char name[50];
    float gpa;
} Student;

// Define the node of the doubly linked list
typedef struct node
{
    Student data;
    struct node *prev;
    struct node *next;
} Node;

Node *createNode(int id, char *name, float gpa)
{
    Node *newNode = (Node *)malloc(sizeof(Node));
    newNode->data.id = id;
    strcpy(newNode->data.name, name);
    newNode->data.gpa = gpa;
    newNode->prev = NULL;
    newNode->next = NULL;
    return newNode;
}

void insertAtBeginning(Node **head, int id, char *name, float gpa)
{
    Node *newNode = createNode(id, name, gpa);
    if (*head == NULL)
    {
        *head = newNode;
    }
    else
    {
        newNode->next = *head;
        (*head)->prev = newNode;
        *head = newNode;
    }
}

void insertAtEnd(Node **head, int id, char *name, float gpa)
{
    Node *newNode = createNode(id, name, gpa);
    if (*head == NULL)
    {
        *head = newNode;
    }
    else
    {
        Node *temp = *head;
        while (temp->next != NULL)
        {
            temp = temp->next;
        }
        temp->next = newNode;
        newNode->prev = temp;
    }
}
void deleteNode(Node **head, int id)
{
    if (*head == NULL)
    {
        return;
    }
    Node *temp = *head;
    while (temp != NULL && temp->data.id != id)
    {
        temp = temp->next;
    }
    if (temp == NULL)
    {
        printf("Student with ID %d not found.\n", id);
        return;
    }
    if (temp->prev != NULL)
    {
        temp->prev->next = temp->next;
    }
    else
    {
        *head = temp->next;
    }
    if (temp->next != NULL)
    {
        temp->next->prev = temp->prev;
    }
    free(temp);
}

void displayList(Node *head)
{
    Node *temp = head;
    while (temp != NULL)
    {
        printf("ID: %d, Name: %s, GPA: %.2f\n", temp->data.id, temp->data.name, temp->data.gpa);
        temp = temp->next;
    }
}

int main()
{
    Node *head = NULL;

    insertAtBeginning(&head, 1, "Alice", 3.5);
    insertAtEnd(&head, 2, "Bob", 3.7);
    insertAtEnd(&head, 3, "Charlie", 3.9);

    printf("Doubly Linked List:\n");
    displayList(head);

    printf("\nDeleting student with ID 2:\n");
    deleteNode(&head, 2);
    displayList(head);

    return 0;
}